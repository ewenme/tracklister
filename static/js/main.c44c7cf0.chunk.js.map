{"version":3,"sources":["about.js","tracklist.js","track-no-toggle.js","clipboard.js","app.js","file-parsers.js","index.js"],"names":["About","className","href","TrackLayout","props","track_data","length","rows","map","row","index","key","artist","track","list_style","track_numbers","Tracklist","id","TrackNoToggle","defaultChecked","icons","onChange","toggleTrackNumbers","Clipboard","tracks","track_no_status","useClipboard","join","successDuration","isCopied","setCopied","onClick","App","state","acceptedFiles","onDrop","forEach","file","extension","name","split","pop","toLowerCase","reader","FileReader","onabort","console","log","onerror","onload","binaryStr","result","parser","xml2js","Parser","parseString","resultObject","collection_entries","ENTRY","collection_data","step","location_info","push","ARTIST","TITLE","label","LABEL","location","VOLUME","DIR","FILE","playlist_type","$","TYPE","playlist_entries","playlist_data","KEY","track_no","played","PLAYEDPUBLIC","tracklist_data","concat","reduce","m","o","set","Object","assign","get","Map","values","sort","a","b","parseFloat","filter","obj","parseTraktor","setState","data_split","shift","parseRekordbox","results","Papa","parse","data","parseSerato","readAsText","this","bind","accept","multiple","getRootProps","getInputProps","isDragActive","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c44c7cf0.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction About() {\n    return (\n            <div className=\"prose\">\n              {\" \"}\n              <p>\n              A simple app to turn .txt files exported from{\" \"}\n              <a href=\"https://rekordbox.com/en/\">Rekordbox</a> and .nml files\n              exported from{\" \"}\n              <a href=\"https://en.wikipedia.org/wiki/Traktor\">Traktor</a> into\n              tracklists.\n              </p>\n              <p>\n              <a href=\"https://ewen6.typeform.com/to/meXt691B\">Feedback welcome :]</a>\n              </p>\n              <p>\n              <a href=\"https://github.com/ewenme/tracklister\">Pull Requests also welcome !</a>\n              </p>\n              <h4>Rekordbox support</h4>\n              <p>\n              Any playlist can be exported from Rekordbox by right-clicking,\n              selecting \"Export a playlist to a file\", then \"Export a playlist\n              to a file for KUVO (*.txt)\". \n              N.B. history files can be\n              exported in the same way ‚Äî find them under the \"Histories\" tab\n              inside the explorer pane.\n              </p>\n              <h4>Traktor support</h4>\n              <p>\n              Any playlist can be exported from Traktor by right-clicking, then\n              selecting \"Export Playlist\", and ensuring \"NML\" filetype is\n              active. Traktor also exports all sessions as .nml history files ‚Äî\n              see{\" \"}\n              <a href=\"https://support.native-instruments.com/hc/en-us/articles/210274225-What-Files-and-Folders-does-TRAKTOR-Install-on-my-System-\">\n                this article\n              </a>{\" \"}\n              for more info.\n              </p>\n            </div>\n    )\n}\n\nexport default About;\n","import React from \"react\";\nimport About from \"./about.js\";\n\nconst TrackLayout = props => {\n\n  if (props.track_data.length === 0) {\n    return (\n      About()\n    )\n  }\n  const rows = props.track_data.map((row, index) => {\n    return (\n      <li className=\"pb-4\" key={index}>\n        <span className=\"track-artist\">\n          <b>{row.artist}</b>{\" \"}\n        </span>\n        <br />\n        <span className=\"track-title\">\n          <small>{row.track}</small>\n        </span>\n      </li>\n    );\n  });\n\n  const list_style = props.track_numbers ? \"list-decimal\" : \"list-none\";\n\n  return <ol className={\"list-inside \" + list_style}>{rows}</ol>;\n};\n\nfunction Tracklist(props) {\n\n    return (\n      <div id=\"tracklist\">\n        <TrackLayout track_data={props.track_data} track_numbers={props.track_numbers} />\n      </div>\n    );\n}\n\nexport default Tracklist;\n","import React from \"react\";\nimport Toggle from \"react-toggle\";\n\nfunction TrackNoToggle(props) {\n\n    return (\n      <label className=\"flex flex-row\">\n        <Toggle\n          id=\"track-no-status\"\n          defaultChecked={props.track_numbers}\n          icons={false}\n          onChange={props.toggleTrackNumbers}\n        />\n        <span className=\"pl-2\">track numbers</span>\n      </label>\n    );\n}\n\nexport default TrackNoToggle;\n","import React from \"react\";\nimport useClipboard from \"react-use-clipboard\";\n\nfunction tracksAsString(tracks, track_no_status) {\n  const rows = tracks.map((row, index) => {\n    if (track_no_status) {\n      return index + 1 + \". \" + row.artist + \" - \" + row.track;\n    } else {\n      return row.artist + \" - \" + row.track;\n    }\n  });\n  return rows.join(\"\\n\");\n}\n\nfunction Clipboard(props) {\n\n  const [isCopied, setCopied] = useClipboard(\n    tracksAsString(props.track_data, props.track_numbers), {\n      successDuration: 1000,\n    }\n    );\n\n    return (\n          <button className=\"bg-white hover:bg-gray-100 py-2 px-4 border border-gray-400 rounded shadow\" onClick={setCopied}>\n            {isCopied ? \"copied! üëç\" : \"copy to clipboard\"}\n            </button>\n    );\n}\n\nexport default Clipboard;\n","import React, { Component } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport Tracklist from \"./tracklist\";\nimport TrackNoToggle from \"./track-no-toggle\";\nimport Clipboard from \"./clipboard\";\nimport {parseTraktor, parseRekordbox, parseSerato} from \"./file-parsers\";\n\nclass App extends Component {\n  state = {\n    acceptedFiles: [],\n    track_data: [],\n    track_numbers: true\n  };\n  constructor() {\n    super();\n    this.onDrop = acceptedFiles => {\n      acceptedFiles.forEach(file => {\n        let extension = file.name\n          .split(\".\")\n          .pop()\n          .toLowerCase();\n\n          const reader = new FileReader();\n          reader.onabort = () => console.log(\"file reading was aborted\");\n          reader.onerror = () => console.log(\"file reading has failed\");\n          reader.onload = () => {\n\n          const binaryStr = reader.result;\n\n          if (extension === \"nml\") {\n          let tracks = parseTraktor(binaryStr);\n          this.setState({\n            track_data: tracks\n          });\n        } else if (extension === \"txt\") {\n            let tracks = parseRekordbox(binaryStr)\n            this.setState({\n              track_data: tracks\n            });\n          } else if (extension === \"csv\") {\n            let tracks = parseSerato(binaryStr)\n            this.setState({\n              track_data: tracks\n            });\n          };\n        }\n          reader.readAsText(file);\n      },\n      this.setState({\n        acceptedFiles: acceptedFiles\n      }))\n    }\n  };\n  \n\n  toggleTrackNumbers() {\n    this.setState({\n      track_numbers: !this.state.track_numbers\n    });\n  }\n\n  render() {\n    const { track_data, track_numbers } = this.state;\n\n    return (\n      <div className=\"container flex p-4\">\n        <div className=\"flex-col flex-grow\">\n          <div className=\"flex flex-row items-center space-x-4 pb-10\">\n        <TrackNoToggle\n            track_numbers={this.state.track_numbers}\n            toggleTrackNumbers={this.toggleTrackNumbers.bind(this)}\n          />\n        <Clipboard track_data={track_data} track_numbers={track_numbers} />\n        </div>\n          <div className=\"space-x-2\">\n          <Tracklist track_data={track_data} track_numbers={track_numbers} />\n          </div>\n        </div>\n          <div className=\"p-4 border-4\">\n          <Dropzone onDrop={this.onDrop} accept=\".nml, .txt\" multiple={false}>\n            {({ getRootProps, getInputProps, isDragActive }) => (\n              <div className=\"flex h-full\" {...getRootProps({})}>\n                <input {...getInputProps()} />\n                {isDragActive\n                  ? \"click here or drag a file to upload\"\n                  : \"click here or drag a file to upload\"}\n              </div>\n            )}\n          </Dropzone>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import xml2js from \"xml2js\";\nimport { Papa } from 'papaparse';\n\nfunction parseTraktor(file) {\n\n        const parser = new xml2js.Parser();\n        parser.parseString(file);\n        // extract collection metadata\n        const result = parser.resultObject;\n\n        const collection_entries = result[\"NML\"][\"COLLECTION\"][0].ENTRY;\n\n        // extract track metadata\n        let collection_data = [];\n\n        for (let step = 0; step < collection_entries.length; step++) {\n          let location_info = collection_entries[step][\"LOCATION\"][0][\"$\"];\n\n          collection_data.push({\n            artist: collection_entries[step][\"$\"].ARTIST,\n            track: collection_entries[step][\"$\"].TITLE,\n            label: collection_entries[step][\"INFO\"][0][\"$\"].LABEL,\n            location:\n              location_info.VOLUME + location_info.DIR + location_info.FILE\n          });\n        }\n\n        // establish playlist type\n        const playlist_type =\n          result[\"NML\"][\"PLAYLISTS\"][0][\"NODE\"][0][\"SUBNODES\"][0][\n            \"NODE\"\n          ][0][\"PLAYLIST\"][0].$.TYPE;\n\n        // extract playlist metadata\n        const playlist_entries =\n          result[\"NML\"][\"PLAYLISTS\"][0][\"NODE\"][0][\"SUBNODES\"][0][\n            \"NODE\"\n          ][0][\"PLAYLIST\"][0].ENTRY;\n\n        let playlist_data = [];\n\n        if (playlist_type === \"PROTOCOL\") {\n          for (let step = 0; step < playlist_entries.length; step++) {\n            playlist_data.push({\n              location: playlist_entries[step][\"PRIMARYKEY\"][0][\"$\"].KEY,\n              track_no: step,\n              played:\n                playlist_entries[step][\"EXTENDEDDATA\"][0][\"$\"].PLAYEDPUBLIC\n            });\n          }\n        } else if (playlist_type === \"LIST\") {\n          for (let step = 0; step < playlist_entries.length; step++) {\n            playlist_data.push({\n              location: playlist_entries[step][\"PRIMARYKEY\"][0][\"$\"].KEY,\n              track_no: step,\n              played: \"1\"\n            });\n          }\n        }\n\n        // merge collection/playlist info\n        let tracklist_data = [\n          ...collection_data\n            .concat(playlist_data)\n            .reduce(\n              (m, o) =>\n                m.set(\n                  o.location,\n                  Object.assign(m.get(o.location) || {}, o)\n                ),\n              new Map()\n            )\n            .values()\n        ];\n\n        tracklist_data.sort(\n          (a, b) => parseFloat(a.track_no) - parseFloat(b.track_no)\n        );\n\n        // remove tracks that weren't actually played\n        let played_tracks = tracklist_data.filter(function(obj) {\n          return obj.played === \"1\";\n        });\n\n        return played_tracks;\n}\n\nfunction parseRekordbox(file) {\n\n  let data_lines = file.split(\"\\n\");\n\n  const data_formed = data_lines.map(index => {\n    return index.split(\"\\t\");\n  });\n\n  const data_split = data_formed.filter(index => index.length === 11);\n\n  data_split.shift();\n\n  let tracks = [];\n\n  for (let step = 0; step < data_split.length; step++) {\n    tracks.push({\n      artist: data_split[step][3],\n      track: data_split[step][2],\n      track_no: step\n    });\n  }\n\n  return tracks;\n}\n\nfunction parseSerato(file) {\n\n  let results = Papa.parse(file)\n\n  console.log(results);\n  return results.data;\n}\n\nexport {parseTraktor, parseRekordbox, parseSerato}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app\";\nimport \"./index.css\";\nimport \"typeface-work-sans\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}